{
  "name": "datban-microservices",
  "version": "1.0.0",
  "description": "DatBan Restaurant Reservation System - Microservices Architecture",
  "scripts": {
    "dev": "concurrently \"npm run dev:user\" \"npm run dev:restaurant\" \"npm run dev:reservation\" \"npm run dev:payment\" \"npm run dev:notification\" \"npm run dev:analytics\"",
    "dev:user": "cd apps/user-service && npm run start:dev",
    "dev:restaurant": "cd apps/restaurant-service && npm run start:dev",
    "dev:reservation": "cd apps/reservation-service && npm run start:dev",
    "dev:payment": "cd apps/payment-service && npm run start:dev",
    "dev:notification": "cd apps/notification-service && npm run start:dev",
    "dev:analytics": "cd apps/analytics-service && npm run start:dev",
    "build": "npm run build:user && npm run build:restaurant && npm run build:reservation && npm run build:payment && npm run build:notification && npm run build:analytics",
    "build:user": "cd apps/user-service && npm run build",
    "build:restaurant": "cd apps/restaurant-service && npm run build",
    "build:reservation": "cd apps/reservation-service && npm run build",
    "build:payment": "cd apps/payment-service && npm run build",
    "build:notification": "cd apps/notification-service && npm run build",
    "build:analytics": "cd apps/analytics-service && npm run build",
    "test": "npm run test:user && npm run test:restaurant && npm run test:reservation && npm run test:payment && npm run test:notification && npm run test:analytics",
    "test:user": "cd apps/user-service && npm run test",
    "test:restaurant": "cd apps/restaurant-service && npm run test",
    "test:reservation": "cd apps/reservation-service && npm run test",
    "test:payment": "cd apps/payment-service && npm run test",
    "test:notification": "cd apps/notification-service && npm run test",
    "test:analytics": "cd apps/analytics-service && npm run test",
    "test:integration": "npm run test:integration:user && npm run test:integration:restaurant && npm run test:integration:reservation && npm run test:integration:payment && npm run test:integration:notification && npm run test:integration:analytics",
    "test:integration:user": "cd apps/user-service && npm run test:integration",
    "test:integration:restaurant": "cd apps/restaurant-service && npm run test:integration",
    "test:integration:reservation": "cd apps/reservation-service && npm run test:integration",
    "test:integration:payment": "cd apps/payment-service && npm run test:integration",
    "test:integration:notification": "cd apps/notification-service && npm run test:integration",
    "test:integration:analytics": "cd apps/analytics-service && npm run test:integration",
    "test:e2e": "jest --config=test/e2e/jest-e2e.json --runInBand",
    "test:load": "artillery run test/load/load-test.yml",
    "proto:generate": "./scripts/generate-proto.sh",
    "proto:user": "protoc --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=libs/proto --proto_path=proto proto/user.proto",
    "proto:restaurant": "protoc --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=libs/proto --proto_path=proto proto/restaurant.proto",
    "proto:reservation": "protoc --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=libs/proto --proto_path=proto proto/reservation.proto",
    "proto:payment": "protoc --plugin=node_modules/.bin/protoc-gen-ts_proto --ts_proto_out=libs/proto --proto_path=proto proto/payment.proto",
    "migration:generate:user": "cd apps/user-service && npm run migration:generate",
    "migration:run:user": "cd apps/user-service && npm run migration:run",
    "migration:revert:user": "cd apps/user-service && npm run migration:revert",
    "migration:generate:reservation": "cd apps/reservation-service && npm run migration:generate",
    "migration:run:reservation": "cd apps/reservation-service && npm run migration:run",
    "migration:revert:reservation": "cd apps/reservation-service && npm run migration:revert",
    "migration:generate:payment": "cd apps/payment-service && npm run migration:generate",
    "migration:run:payment": "cd apps/payment-service && npm run migration:run",
    "migration:revert:payment": "cd apps/payment-service && npm run migration:revert",
    "seed:restaurants": "cd apps/restaurant-service && npm run seed:data",
    "seed:test-users": "cd apps/user-service && npm run seed:test-data",
    "lint": "npm run lint:user && npm run lint:restaurant && npm run lint:reservation && npm run lint:payment && npm run lint:notification && npm run lint:analytics",
    "lint:user": "cd apps/user-service && npm run lint",
    "lint:restaurant": "cd apps/restaurant-service && npm run lint",
    "lint:reservation": "cd apps/reservation-service && npm run lint",
    "lint:payment": "cd apps/payment-service && npm run lint",
    "lint:notification": "cd apps/notification-service && npm run lint",
    "lint:analytics": "cd apps/analytics-service && npm run lint",
    "format": "prettier --write \"**/*.{ts,js,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,js,json,md}\"",
    "docker:build": "./scripts/docker-build.sh",
    "docker:up": "docker-compose -f infrastructure/docker-compose.yml up -d",
    "docker:down": "docker-compose -f infrastructure/docker-compose.yml down",
    "docker:logs": "docker-compose -f infrastructure/docker-compose.yml logs -f",
    "k8s:deploy": "./scripts/deploy-production.sh",
    "k8s:rollback": "./scripts/deploy-production.sh rollback",
    "monitoring:up": "docker-compose -f infrastructure/monitoring/docker-compose.yml up -d",
    "monitoring:down": "docker-compose -f infrastructure/monitoring/docker-compose.yml down",
    "prepare": "husky install"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/supertest": "^2.0.12",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.7.2",
    "artillery": "^2.0.24",
    "concurrently": "^8.2.2",
    "eslint": "^8.57.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^14.0.1",
    "prettier": "^3.6.2",
    "supertest": "^6.3.4",
    "testcontainers": "^10.28.0",
    "ts-jest": "^29.4.1"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "pre-push": "npm run test && npm run test:integration"
    }
  },
  "lint-staged": {
    "*.{ts,js}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "main": "index.js",
  "directories": {
    "doc": "docs",
    "test": "test"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@nestjs/bull": "^11.0.3",
    "@nestjs/common": "^11.1.6",
    "@nestjs/core": "^11.1.6",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/microservices": "^11.1.6",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/typeorm": "^11.0.0",
    "bcryptjs": "^3.0.2",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "crypto": "^1.0.1"
  }
}
