{
  "editor.tabSize": 2,
  "editor.codeActionsOnSave": {
    "source.fixAll": "always",
    "source.organizeImports": "always"
  },
  "[typescript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "always"
    },
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "always"
    },
    "editor.formatOnSave": true
  },
  "editor.formatOnSave": true,
  "editor.detectIndentation": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": false,
  "[javascript][typescript]": {
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "always"
    }
  },
  "gitlens.ai.generateCommitMessage.customInstructions": "Generate a commit message following Conventional Commits format, based on the commitlint config: extends '@commitlint/config-conventional', ignores 'release', requires scope (never empty), scope enum from: dynamic subdirs in ./src plus ['remove', 'revert', 'conflict', 'config', 'entity', 'utils', 'deps', 'modules', 'test', 'migration', 'core', 'swagger']. Types: feat (✨ new features; add ! for breaking: feat! 💥), fix (🐛 bug fixes), build (🏗️ build configs), ci (👷 CI updates), chore (🔧 maintenance), docs (📝 docs), perf (⚡️ performance), refactor (♻️ refactoring), revert (⏪️ revert), style (💄 styles/UI), test (🧪 tests). Keep message concise, clear, understandable; max 1 line summary with emoji, no body unless needed. Example: 'feat(core): ✨ add new authentication module' or 'fix(utils): 🐛 resolve data parsing error'."
}
